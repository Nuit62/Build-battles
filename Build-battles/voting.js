import { Players, Chat, Ui } from 'pixel_combats/room';

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª—è
let votes = {};         // { [targetRoomId]: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ—Å–æ–≤ }
let votedPlayers = [];   // –ò–≥—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏
let isVotingActive = false;

// –ó–∞–ø—É—Å–∫ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
export function startVoting(duration) {
    votes = {};
    votedPlayers = [];
    isVotingActive = true;
    
    Ui.GetContext().Hint.Value = `–ì–æ–ª–æ—Å—É–π—Ç–µ: /Vote [RoomId] (–û—Å—Ç–∞–ª–æ—Å—å ${duration} —Å–µ–∫)`;
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ —á–∞—Ç–∞
    Chat.OnMessage.Add(onVoteCommand);
    
    // –¢–∞–π–º–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    new Timer(duration, () => {
        endVoting();
    }).Start();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /Vote
function onVoteCommand(e) {
    if (!isVotingActive) return;
    
    const voter = Players.GetByRoomId(e.Sender);
    const args = e.Text.trim().split(' ');
    
    if (args[0] !== "/Vote" || args.length < 2) return;
    
    const targetRoomId = parseInt(args[1]);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∏
    if (votedPlayers.includes(e.Sender)) {
        voter.Message("–í—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏!");
        return;
    }
    
    if (!Players.GetByRoomId(targetRoomId)) {
        voter.Message("–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
    }
    
    // –ó–∞—Å—á–∏—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å
    votes[targetRoomId] = (votes[targetRoomId] || 0) + 1;
    votedPlayers.push(e.Sender);
    voter.Message(`–ì–æ–ª–æ—Å –∑–∞ –∏–≥—Ä–æ–∫–∞ ${targetRoomId} —É—á—Ç—ë–Ω!`);
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
function endVoting() {
    isVotingActive = false;
    Chat.OnMessage.Remove(onVoteCommand);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    let winnerRoomId = null;
    let maxVotes = 0;
    
    for (const [roomId, count] of Object.entries(votes)) {
        if (count > maxVotes) {
            maxVotes = count;
            winnerRoomId = roomId;
        }
    }
    
    // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if (winnerRoomId) {
        const winner = Players.GetByRoomId(parseInt(winnerRoomId));
        Players.All.forEach(p => {
            p.Message(`üèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: –ò–≥—Ä–æ–∫ ${winnerRoomId} (${maxVotes} –≥–æ–ª–æ—Å–æ–≤)`);
        });
    } else {
        Players.All.forEach(p => {
            p.Message("–ù–∏–∫—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª –≥–æ–ª–æ—Å–æ–≤ :(");
        });
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—á–∫–æ–≤ –∏–≥—Ä–æ–∫–∞ (–¥–ª—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞)
export function getPlayerScore(roomId) {
    return votes[roomId] || 0;
}